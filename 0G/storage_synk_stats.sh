#!/bin/bash
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: bash <(curl -s https://raw.githubusercontent.com/RomanTsibii/nodes/main/0G/storage_synk_stats.sh) 

# –ö–æ–ª—å–æ—Ä–∏
RED=$'\033[0;31m'
GREEN=$'\033[0;32m'
YELLOW=$'\033[1;33m'
CYAN=$'\033[0;36m'
BLUE=$'\033[0;34m'
NC=$'\033[0m' # –°–∫–∏–¥–∞–Ω–Ω—è –∫–æ–ª—å–æ—Ä—É

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
INTERVAL=30
PORT=5678
REMOTE_URL="https://chainscan-galileo.0g.ai/v1/homeDashboard"
ENDPOINT="http://localhost:$PORT"

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–º—ñ–Ω–Ω–∏—Ö
PREV_LOCAL_BLOCK=0
PREV_TIME=0
FIRST_RUN=true

echo -e "${BLUE}‚è≥ –°—Ç–∞—Ä—Ç –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –ø–æ—Ä—Ç—É $PORT...${NC}"

while true; do
  CURRENT_TIME=$(date '+%H:%M:%S')

  # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ –±–ª–æ–∫—É –≤—ñ–¥–¥–∞–ª–µ–Ω–æ–≥–æ –≤—É–∑–ª–∞
  REMOTE_BLOCK=$(curl -s "$REMOTE_URL" | jq -r '.result.blockNumber')

  # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ –±–ª–æ–∫—É –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –≤—É–∑–ª–∞ —á–µ—Ä–µ–∑ RPC
  RESPONSE=$(curl -s -X POST "$ENDPOINT" \
    -H "Content-Type: application/json" \
    -d '{"jsonrpc":"2.0","method":"zgs_getStatus","params":[],"id":1}')

  LOCAL_BLOCK=$(echo "$RESPONSE" | jq -r '.result.logSyncHeight')

  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ–º–∏–ª–∫–∏
  if [[ -z "$REMOTE_BLOCK" || -z "$LOCAL_BLOCK" || "$REMOTE_BLOCK" == "null" || "$LOCAL_BLOCK" == "null" ]]; then
    echo -e "${RED}[$CURRENT_TIME][$PORT] ‚ùå –ü–æ–º–∏–ª–∫–∞: –Ω–µ–º–æ–∂–ª–∏–≤–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ –±–ª–æ–∫–∏.${NC}"
    sleep "$INTERVAL"
    continue
  fi

  # –û–±—á–∏—Å–ª–µ–Ω–Ω—è –∑–∞–ª–∏—à–∫—É
  REMAINING=$((REMOTE_BLOCK - LOCAL_BLOCK))

  # –í–∏–≤—ñ–¥ –æ—Å–Ω–æ–≤–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
  if (( REMAINING > 0 )); then
    OUTPUT="${YELLOW}[$CURRENT_TIME] ‚è≥ –ó–∞–ª–∏—à–∏–ª–æ—Å—å: $REMAINING –±–ª–æ–∫—ñ–≤ (–ª–æ–∫–∞–ª—å–Ω–∏–π: $LOCAL_BLOCK / –≤—ñ–¥–¥–∞–ª–µ–Ω–∏–π: $REMOTE_BLOCK)"
  else
    echo -e "${GREEN}[$CURRENT_TIME] ‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! (–ª–æ–∫–∞–ª—å–Ω–∏–π: $LOCAL_BLOCK / –≤—ñ–¥–¥–∞–ª–µ–Ω–∏–π: $REMOTE_BLOCK)${NC}"
    exit 0
  fi

  # –®–≤–∏–¥–∫—ñ—Å—Ç—å —ñ ETA
  if [ "$FIRST_RUN" = false ]; then
    BLOCK_DIFF=$((LOCAL_BLOCK - PREV_LOCAL_BLOCK))
    TIME_DIFF=$(( $(date +%s) - PREV_TIME ))

    if (( TIME_DIFF > 0 && BLOCK_DIFF > 0 )); then
      SPEED=$(echo "scale=2; $BLOCK_DIFF / $TIME_DIFF" | bc)
      ETA_SECONDS=$(echo "scale=0; $REMAINING / $SPEED" | bc)
      ETA_MINUTES=$((ETA_SECONDS / 60))
      ETA_HOURS=$((ETA_MINUTES / 60))
      ETA_MINUTES=$((ETA_MINUTES % 60))
      ETA_SECONDS=$((ETA_SECONDS % 60))
      OUTPUT+=" ${CYAN}‚è±Ô∏è ETA: ${ETA_HOURS}–≥ ${ETA_MINUTES}—Ö–≤ ${ETA_SECONDS}—Å${NC}"
    else
      OUTPUT+=" ${CYAN}üöÄ –®–≤–∏–¥–∫—ñ—Å—Ç—å: –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–∞–Ω–∏—Ö –¥–ª—è –æ—Ü—ñ–Ω–∫–∏.${NC}"
    fi
  else
    FIRST_RUN=false
  fi

  echo -e "$OUTPUT"

  # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö
  PREV_LOCAL_BLOCK=$LOCAL_BLOCK
  PREV_TIME=$(date +%s)

  sleep "$INTERVAL"
done
